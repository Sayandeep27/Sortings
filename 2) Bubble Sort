Idea: if arr[i] > arr[i+1] swap them. To place the element in their respective
position, we have to do the following operation N-1 times.

Time Complexity: O(N^2)

--------------------------ITERATIVE + RECURSIVE------------------------------------------------------------

#include<bits/stdc++.h>
using namespace std;

int main()
{
    int n;
    cin>>n;
    
    int arr[n];
    
    for(int i=0;i<n;i++) cin>>arr[i];
    
    // sorting
    
    int counter=0;
    
    for(int i=0;i<n-1;i++)
    {
        for(int j=0;j<n-i-1;j++)
        {
            if(arr[j]>arr[j+1])
            {
                swap(arr[j],arr[j+1]);
            }
        }
    }
    
    for(int i=0;i<n;i++)
    {
        cout<<arr[i]<<" ";
    }cout<<endl;
    
    
    return 0;
}



---------------------------------------------------------------------------------------------------------------------------------------------------------------

RECURSIVE BUBBLE SORT------------------


#include<bits/stdc++.h>
using namespace std;

void bubble_sort(int arr[],int n)
{
    if(n==1) return;
    
    int count=0;
    
    for(int i=0;i<n-1;i++)
    {
        if(arr[i]>arr[i+1])
        {
            swap(arr[i],arr[i+1]);
            count++;
        }
    }
    
    if(count==0) return;
    
    bubble_sort(arr,n-1);
    
}


int main()
{
    int n;
    cin>>n;
    
    int arr[n];
    
    for(int i=0;i<n;i++) cin>>arr[i];
    
    // sorting
    
    bubble_sort(arr,n);
    
    for(int i=0;i<n;i++)
    {
        cout<<arr[i]<<" ";
    }cout<<endl;
    
    
    return 0;
}



